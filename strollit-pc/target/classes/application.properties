
spring.application.name=strollit-pc

server.port=105
server.servlet.context-path=/

# Timestamp convert
spring.jackson.date-format=yyyy-MM-dd HH:mm:ss
spring.jackson.time-zone=GMT+8

# 设置本实例是否注册到服务注册中心，因为有些时候实例只想获取服务而不想提供服务 默认true
eureka.client.registerWithEureka=true
# 设置本客户端是否从服务注册中心获取服务 默认true
eureka.client.fetchRegistry=true
# 设置注册的服务多久向服务注册中心发送心跳包(单位s)
eureka.instance.lease-renewal-interval-in-seconds=30
# 设置多久没有收到注册服务的心跳包后剔除该服务(单位s) 此配置应当属于eureka服务进行配置
# eureka.instance.lease-expiration-duration-in-seconds=90
# 设置服务是否开启保护机制，即即使eureka.instance.lease-expiration-duration-in-seconds超时也不会剔除该服务，
# 一直等待服务重新开启，设置true时会一直持有该服务不释放 此配置应当属于eureka服务进行配置
# eureka.server.enable-self-preservation=ture
# 是否优先使用IP地址作为主机名，如果不想配置主机名IP的映射，可以设置此配置为true 默认false
# 设置指定注册服务中心地址
eureka.client.serviceUrl.defaultZone=http://admin:icefrog@127.0.0.1:100/eureka/
eureka.instance.preferIpAddress=true
eureka.instance.instance-id=${spring.application.name}:${spring.cloud.client.ip-address}:${spring.application.instance-id:${server.port}}

# 开启hystrix 断路器
feign.hystrix.enabled=true
# 超时时间（默认1000ms，单位：ms）在调用方配置，被该调用方的所有方法的超时时间都是该值
hystrix.command.default.execution.isolation.thread.timeoutInMilliseconds=20001
# 线程池核心线程数（默认为10）
hystrix.threadpool.default.coreSize=10
#请求处理的超时时间
ribbon.ReadTimeout=2000
ribbon.SocketTimeout=2000
#请求连接的超时时间
ribbon.ConnectTimeout=5000

#pagehelper config
pagehelper.helperDialect=mysql
pagehelper.reasonable=true
pagehelper.supportMethodsArguments=true
pagehelper.params=countSql

spring.datasource.name=${spring.application.name}
spring.datasource.url=jdbc:mysql://39.108.250.104:33060/zoomgo-ec-dev?useUnicode=true&characterEncoding=utf8&useSSL=false&autoReconnect=true
spring.datasource.username=zoomgoh
spring.datasource.password=ZG.test.ec
spring.datasource.type=com.alibaba.druid.pool.DruidDataSource
spring.datasource.driver-class-name=com.mysql.jdbc.Driver
spring.datasource.filters=stat
spring.datasource.maxActive=20
spring.datasource.initialSize=10
spring.datasource.maxWait=60000
spring.datasource.minIdle=1
spring.datasource.timeBetweenEvictionRunsMillis=60000
spring.datasource.minEvictableIdleTimeMillis=300000
spring.datasource.validationQuery=select 'x'
spring.datasource.testWhileIdle=true
spring.datasource.testOnBorrow=true
spring.datasource.testOnReturn=true
spring.datasource.poolPreparedStatements=true
spring.datasource.maxOpenPreparedStatements=20